이름: 예약어(기존에 있는 이름) + 개발자가 만든 이름(새로운 이름)
ex) class => class라는 언어(예약어)를 가지고 있는 컴파일러는 클래스로 해석한다. => 클래스 예약어로 해석함.
so) class abc => abc라는 클래스구나! 라고 컴파일러는 해석함.

그래서 a 라고 컴파일러에게 알려주려면
자료형 선언 후 (컴파일러가 갖고 있는 언어중 하나) 변수이름 선언해야 알아듣는다.
ex)선언 명령문 int a; -> 예약어 + 사용자가 새로 만든 이름 + ;
자바에서는 문단위로 한다. 명령명령명량핫도그

10 -> 메모리( 주기억 장치인 Main memory에 저장된다)
10 -> 10진수의 10

*프로그램 개발 (프로그래밍작업)
입력(input) -> 알고리즘(Algorithm) -> 출력(output)
ex) 10 20 -> 덧셈 계산해라 -> 데이터표현을 해라

3개의 문자 데이터를 변수에 보관하기
ex) char 자료형 예약어 + 변수이름 = 문자데이터;
char ch1 = 'a';
char ch2 = 'b';
char ch3 = 'c';
1. char ch1 -> 메모리공간을 준비한다 (2byte)
2. char ch1 = '가'; -> 정상

String 클래스를 사용 : String 변수이름 = 'abc';
//String: 자바에서 제공해주는 클래스 
//-> java.lang 패키지에 만들어져있다. 
ex) java.lang.String 변수이름 = "문자열";
	(↑부모데릭토리들) 자바랭까지는 패키지, 스트링은 클래스이름

1. 클래스 만들기
1) main()메소드가 있는 클래스 만들기
	MainClass(클래스명) 또는 ControlClass
	->public + class + MainClassP {
		main() 메소드만 있으면 된다 }
2.계산기능을 갖게될 클래스 만들기: 
	CalculatirClass
	->public + class + Calculator { 
	/*두개의 정수를 덧셈해서 결과를 출력하는 메소드*/

*해시(Hash)란?
→ 자료구조의 일종
→ 메모리에 저장 되어 있는 많은 데이터들을 빨리 찾아주는 자료구조(성능우수)
→ 자바에서는 컬렉션 프레임워크를 사용
→ java.util 패키지에 있는 다양한 종류의 자료구조들을 사용할 수 있다.

→	main()메소드에서 사용할때 new연산자를 꼭 사용해서
	add()함수를 메모리에 생헝한 후에 사용 가능한 함수(현재 메모리에 없는 함수)
	1) 클래스 이름 + 변수이름 = new 클래스 이름()
	2) 변수이름.add(10,20)
	public int add ( int a, int b ) { 
		return + 덧셈결과 (정수)}

-------------------------------------------static------------------------------------------------
 < 함수를 여러개 만드는 게 아니라 하나로 다같이 공유해서 쓰는 것이다. 맞나?>
→ 자동으로 메모리에 생성되는 함수 (메소드) new 연산자 필요없는 함수
	1)클래스이름.add2(10,20)
	public *static* int add2 ( int a, int b ) {
		return + 덧셈결과(정수) }

→ 다른 패키지에서는 사용 할 수 없는 메소드
		같은 부모 안에 있는 메소드에서만 사용가능
	int add3( int a, int b ) {
		return + 덧셈결과(정수) }




























  