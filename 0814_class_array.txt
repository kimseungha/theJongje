<20170811>
01. 클래스의 정의
- class 예약어 + 클래스 이름 {
	// 같은 패키지에서만 사용 가능한 클래스 }

- public 예약어 class 예약어 + 클래스 이름 {
	모든 패키지에서 사용 가능한 클래스
	가시성 ↑ 
	여기에 '속성:데이터'와 '기능:메소드'를 넣어준다. }
ex)
	int		변수이름= 초기값;
	클래스 변수이름 =초기값;
	 Integer 클래스 → public class Integer {
		}

*클래스를 만들어보자!
public class Student Class{
	//1.속성(데이터)
		→ 변수, 상수, 배열, 자료구조, 다른 클래스 등등
	//2.기능
}

<!------>
StudentClass2
	refStudentClass2();
new StudentClass2() → 컴파일러가 기본 생성자 메소드를 실행

class StudentClass2 extends Object {
	public StudentClass2 {
		super(); → 실행명령문
	}
}

static변수 : 번호를 생성하는 용도 → 주소가변하지않는 변수 → 이전 값을 유지
ex) static int s_no =0;
클래스이름.s_nn → 0;

nonstatic 변수 : int no = int s_no;
기본 생성자 함수 안에 
1) 학생 번호를 만들어 주는 명령문 작성 → s_no = s_no + 1; / s_no++
2) 1번에서 만든 학생 번호를 보관하는 명령문 작성 → no = s_no !1이 보관된다.

static int s_no = 0;
→ 생성자 함수에서 사용가능
→ static 함수에서 사용가능
→ non-static 함수에서 사용가능


-----------------------------------------장바구니---------------------------------------------
* 장바구니 : 물건 구매자가 구입한 물건의 정보들을 담는 카트(Cart)
1.변수를 선언: 하나만 기억

2.배열을 선언 : 여러개 + 같은 종류
ex) String 클래스를 사용 : 숫자 저장 가능 + 문자 저장 가능공룡

3.자료 구조를 사용하거나 새롭게 설계
→ 변수 + 배열
→ 배열 : 자료구조의 시작
int [ ] 배열이름 = {1,2,3,4,5}
int [ ] 배열이름2 = null;
배열이름2 = new int [5];
! 검색 성능이 우수하다. BUT 새로운 데이터가 왔을때 새로운 배열 준비해야해
	ex) 같은 자료형 [ ] 배열이름2 = null;
		배열이름2 = new 같은 자료형 [크기];

배열이름 = new int [5];
int[ ] 배열이름3 = new int [식];
배열:객체로 관리 → 컴파일러가 관리 → length라는 자동변수를 배열이 생성되는 시점에 만듦 → 정수5(배열의 크기)를 넣어줌 → 5를 출력

*배열 : 새로운 데이터의 추가(삽입)이 불편
*자바에서 컬렉션 프레임 워크에 있는 "ArrayList" 클래스를 사용
→ Array(배열) 
	+ List(리스트:내부적 데이터의 위치인 주소를 보관) 
	ex)배열은 주소가 연속적 0,1,2~ 붙어있어!
	   연결은 서로 떨어져 있는 주소들을 서로 연결 so 새로운데이터 연결용이
	   데이터의 이동은 없고 주소만 변경
예)int [ ]array = {1,2,3,4,5,6,0,0,0,0}
새로운 데이터 7이 3 뒤에 삽입되어야 하는 경우
→현재 데이터가 뒤로이동 (데이터 리패킹 현상)
→배열의 장점 + 리스트의 장점을 결합한 : ArrayList클래스를 쓰자!
→1)import 명령문을 새로 작성하거나
	import java.util.ArrayList;
→2)ArrayList 클래스를 사용할 때 마다 패키지 이름을 전부 다 작성 : java.util.ArrayList
